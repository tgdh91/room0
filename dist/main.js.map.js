{"version":3,"file":"main.js","sources":["../src/modules/role.upgrader.ts","../src/modules/role.harvester.ts","../src/modules/role.builder.ts","../src/creepConfig.ts","../src/modules/creepApi.ts","../src/modules/mount.creep.ts","../src/modules/mount.spawn.ts","../src/modules/mount.ts","../src/modules/spawnApi.ts","../src/main.ts"],"sourcesContent":["/**\r\n * 升级者配置生成器\r\n * source: 从指定矿中挖矿\r\n * target: 将其转移到指定的 roomController 中\r\n * \r\n * @param sourceId 取出能量 id\r\n */\r\nexport default sourceId => ({\r\n    // 采集能量矿\r\n    /**\r\n     * \r\n     * @param {Creep} creep \r\n     * @returns {boolean} \r\n     */\r\n    source: creep => {\r\n        const source = Game.getObjectById(sourceId)\r\n        if (creep.harvest(source) == ERR_NOT_IN_RANGE) creep.moveTo(source)\r\n\r\n        // 自己身上的能量装满了，返回 true（切换至 target 阶段）\r\n        return creep.store.getFreeCapacity() <= 0\r\n    },\r\n    // 升级控制器\r\n    target: creep => {\r\n        const controller = creep.room.controller\r\n        if (creep.upgradeController(controller) == ERR_NOT_IN_RANGE) creep.moveTo(controller)\r\n\r\n        // 自己身上的能量没有了，返回 true（切换至 source 阶段）\r\n        return creep.store[RESOURCE_ENERGY] <= 0\r\n    }\r\n})","/**\r\n * 矿工配置生成器\r\n * source: 从指定矿中挖矿\r\n * target: 将其转移到指定的 roomController 中\r\n * \r\n * @param sourceId 要挖的矿 id\r\n * @param targetId \r\n */\r\nexport default (sourceId, targetId) => ({\r\n    // 采集能量矿\r\n    /**\r\n     * \r\n     * @param {Creep} creep \r\n     * @returns {boolean} \r\n     */\r\n    source: creep => {\r\n        const source = Game.getObjectById(sourceId)\r\n        if (creep.harvest(source) == ERR_NOT_IN_RANGE) creep.moveTo(source)\r\n\r\n        // 自己身上的能量装满了，返回 true（切换至 target 阶段）\r\n        return creep.store.getFreeCapacity() <= 0\r\n    },\r\n    // 存放能量\r\n    target: creep => {\r\n        const target = Game.getObjectById(targetId)\r\n        if (creep.transfer(target, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) creep.moveTo(target)\r\n\r\n        // 自己身上的能量没有了，返回 true（切换至 source 阶段）\r\n        return creep.store[RESOURCE_ENERGY] <= 0\r\n    }\r\n})","/**\r\n * 建造者配置生成器\r\n * source: 从指定矿中挖矿\r\n * target: 将其转移到指定的 roomController 中\r\n * \r\n * @param sourceId 要挖的矿 id\r\n */\r\nexport default (sourceId) => ({\r\n    \r\n    // 采集能量矿\r\n    /**\r\n     * \r\n     * @param {Creep} creep \r\n     * @returns {boolean} \r\n     */\r\n    source: creep => {\r\n        const source = Game.getObjectById(sourceId)\r\n        if (creep.withdraw(source) == ERR_NOT_IN_RANGE) creep.moveTo(source)\r\n\r\n        // 自己身上的能量装满了，返回 true（切换至 target 阶段）\r\n        return creep.store.getFreeCapacity() <= 0\r\n    },\r\n    // 开始建造\r\n    target: creep => {\r\n        const target = creep.room.find(FIND_MY_CONSTRUCTION_SITES)[0]\r\n        if (creep.build(target) == ERR_NOT_IN_RANGE) creep.moveTo(target)\r\n\r\n        // 自己身上的能量没有了，返回 true（切换至 source 阶段）\r\n        return creep.store[RESOURCE_ENERGY] <= 0\r\n    }\r\n})","export var creepConfigs = {\r\n    harvester1: {\r\n        role: 'harvester',\r\n        body: [ WORK, CARRY, MOVE],\r\n        number: 2,\r\n        args: ['5bbcadc79099fc012e637d6a','653bad3f94bd2214aabd7582']\r\n        \r\n    }, \r\n    upgrader1: {\r\n        role: 'upgrader',\r\n        body: [ WORK, CARRY, MOVE ],\r\n        number: 5,\r\n        args:['5bbcadc79099fc012e637d6c', '5bbcadc79099fc012e637d6b']\r\n        \r\n    }, \r\n    builder1: {\r\n        role:'builder',\r\n        body: [ WORK, CARRY, MOVE ],\r\n        number: 1,\r\n        args: ['5bbcadc79099fc012e637d6a']\r\n    }\r\n}\r\n\r\n","import { creepConfigs } from \"@/creepConfig\"\r\n\r\n\r\nexport let creepApi = {\r\n    /**\r\n     * 新增 creep 配置项\r\n     * @param configName 配置项名称\r\n     * @param role 该 creep 的角色\r\n     * @param args creep 的工作参数\r\n     */\r\n    // add(configName, role, ...args) {\r\n    //     if (!Memory.creepConfigs) Memory.creepConfigs = {}\r\n    //     Memory.creepConfigs[configName] = { role, args }\r\n        \r\n    //     return `${configName} 配置项已更新：[角色] ${role} [工作参数] ${args}`\r\n    // },\r\n    // /**\r\n    //  * 移除指定 creep 配置项\r\n    //  * @param configName 要移除的配置项名称\r\n    //  */\r\n    // remove(configName) {\r\n    //     delete Memory.creepConfigs[configName]\r\n    //     return `${configName} 配置项已移除`\r\n    // },\r\n    /**\r\n     * 获取 creep 配置项\r\n     * @param configName 要获取的配置项名称\r\n     * @returns 对应的配置项，若不存在则返回 undefined\r\n     */\r\n    get(configName) {\r\n        return creepConfigs[configName]\r\n    }\r\n}","import roleUpgrader from './role.upgrader' \r\nimport roleHarvester from './role.harvester'\r\nimport roleBuilder from './role.builder'\r\nimport {creepApi} from './creepApi'\r\nimport {spawnApi} from './spawnApi'\r\nimport { creepConfigs } from '@/creepConfig'\r\n\r\nexport function mountCreep () {\r\n    _.assign(Creep.prototype, creepExtension)\r\n}\r\n\r\n/**\r\n * 引入 creep 配置项\r\n * 其键为角色名（role），其值为对应角色的逻辑生成函数\r\n */\r\nconst roles = {\r\n    upgrader: roleUpgrader,\r\n    harvester: roleHarvester,\r\n    builder: roleBuilder\r\n}\r\n\r\nconst creepExtension = {\r\n    // 添加 work 方法\r\n    work() {\r\n\r\n        // ------------------------ 第一步：获取 creep 执行逻辑 ------------------------\r\n    \r\n        // 获取对应配置项\r\n        const myConfig = creepApi.get(this.memory.configName)\r\n        // console.log('myConfig:'+ myConfig)\r\n        // 检查 creep 内存中的配置是否存在\r\n        if (!myConfig) {\r\n            console.log(`creep ${this.name} 携带了一个无效的配置项 ${this.memory.configName}`)\r\n            this.say('找不到配置！')\r\n            return \r\n        }\r\n        const creepLogic = roles[myConfig.role](...myConfig.args)\r\n    \r\n        // ------------------------ 第二步：执行 creep 准备阶段 ------------------------\r\n    \r\n        // 没准备的时候就执行准备阶段\r\n        if (!this.memory.ready) {\r\n            // 有准备阶段配置则执行\r\n            if (creepLogic.prepare) {\r\n                this.memory.ready = creepLogic.prepare(this)\r\n            }\r\n            // 没有就直接准备完成\r\n            else this.memory.ready = true\r\n            return\r\n        }\r\n    \r\n        // ------------------------ 第三步：执行 creep 工作阶段 ------------------------\r\n    \r\n        let stateChange = true\r\n        // 执行对应阶段\r\n        // 阶段执行结果返回 true 就说明需要更换 working 状态\r\n        if (this.memory.working) {\r\n            if (creepLogic.target) stateChange = creepLogic.target(this)\r\n        }\r\n        else {\r\n            if (creepLogic.source) stateChange = creepLogic.source(this)\r\n        }\r\n    \r\n        // 状态变化了就切换工作阶段\r\n        if (stateChange) this.memory.working = !this.memory.working\r\n\r\n        // ------------------------ 第四步：执行 creep 健康检查 ------------------------\r\n        // 如果 creep 还没有发送重生信息的话，执行健康检查，保证只发送一次生成任务\r\n        // 健康检查不通过则向 spawnList 发送自己的生成任务\r\n        // if (this.ticksToLive == creepConfigs[this.memory.configName].body.length * 3) {\r\n        //     spawnApi.addTask(this.room, this.memory.configName)\r\n        // }\r\n    }\r\n}\r\n\r\n","import { creepConfigs } from \"@/creepConfig\"\r\n\r\n\r\nexport function mountSpawn() {\r\n    _.assign(StructureSpawn.prototype, spawnExtension)\r\n}\r\n\r\n\r\nconst spawnExtension = {\r\n    // 添加 work 方法\r\n    work() {\r\n        // 自己已经在生成了 / 内存里没有生成队列 / 生产队列为空 就啥都不干\r\n        if (this.spawning || !this.room.memory.spawnList || this.room.memory.spawnList.length == 0) {\r\n            //console.log('没有')\r\n            return }\r\n        // 进行生成\r\n        //console.log(this.room.memory.spawnList[0])\r\n        const spawnSuccess = this.mainSpawn(this.room.memory.spawnList[0])\r\n        //console.log('spawnCreep success')\r\n        // 生成成功后移除任务\r\n        if (spawnSuccess) this.room.memory.spawnList.shift()\r\n    },\r\n    mainSpawn(configName: string) {\r\n        let creepName = configName+'_'+Game.time\r\n        if(this.spawnCreep(creepConfigs[configName].body, creepName, { memory: { configName: configName }}) == 0) {\r\n            console.log(`生成Creep: ${creepName}, body: ${creepConfigs[configName].body}`)\r\n            return true\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import { mountCreep } from \"./mount.creep\"\r\nimport { mountSpawn } from \"./mount.spawn\"\r\n// const mountFlag = require('./mount.flag')\r\n// const mountRoom = require('./mount.room')\r\n\r\n// 挂载所有的额外属性和方法\r\nexport function mount() {\r\n    console.log('[mount] 重新挂载拓展')\r\n\r\n    mountCreep()\r\n    mountSpawn()\r\n    // mountFlag()\r\n    // mountRoom()\r\n    // 其他更多拓展...\r\n}","import {creepConfigs} from '@/creepConfig'\r\nimport { values } from 'lodash'\r\nexport let spawnApi = {\r\n    addTask(room, configName) { \r\n        // 任务加入队列\r\n        if(!room.memory.spawnList) room.memory.spawnList = []\r\n        if(room.memory.spawnList.length < 10)  room.memory.spawnList.push(configName)\r\n        return room.memory.spawnList.length\r\n    },\r\n    checkCreep(tick){\r\n        if(Game.time % tick == 0 && !Memory.rooms['E15N59'].spawnList.length){\r\n            console.log('Start check number of creeps...')\r\n            let creepNumber = Object.keys(Game.creeps).length\r\n            let configNumber = _.sum(_.map(_.values(creepConfigs), 'number'))\r\n            console.log(`Number of creeps: ${creepNumber}/${configNumber}`)\r\n            if(creepNumber < configNumber) {\r\n                for(let name in Memory.creeps) {\r\n                    if(!Game.creeps[name]) {\r\n                        this.addTask(_.values(Game.rooms)[0], Memory.creeps[name].configName)\r\n                        delete Memory.creeps[name]\r\n                    }\r\n                }\r\n                let configGroups = _.groupBy(Object.values(Game.creeps), 'memory.configName')\r\n                //console.log(_.keys(configGroups))\r\n                for(let configName in creepConfigs){\r\n                    let len = configGroups[configName]?configGroups[configName].length:0\r\n                    console.log(`${configName}: ${len}/${creepConfigs[configName].number}`)\r\n                    while(creepConfigs[configName].number > len){\r\n                        this.addTask(Object.values(Game.rooms)[0], configName)\r\n                        len++\r\n                        //console.log('人数不够 补充人数')\r\n                    }\r\n                }\r\n            }\r\n            console.log('Check finished.')   \r\n        }   \r\n    }\r\n}","import {mount} from './modules/mount'\nimport {creepApi} from './modules/creepApi'\nimport {spawnApi} from './modules/spawnApi'\n\n// 挂载 creep 管理模块\n//require('creepApi.js')\n// 挂载 creep 拓展\nmount()\nMemory.rooms['E15N59'].spawnList = []\nspawnApi.checkCreep(1)\n\nmodule.exports.loop = function() {\n    // 遍历所有 creep 并执行上文中拓展的 work 方法\n    spawnApi.checkCreep(50)\n    Object.values(Game.creeps).forEach(creep => creep.work())\n    Object.values(Game.spawns).forEach(spawn => spawn.work())\n    \n}"],"names":[],"mappings":"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"}